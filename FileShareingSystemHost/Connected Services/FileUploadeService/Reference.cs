//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileShareingSystemHost.FileUploadeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="requestFile", Namespace="http://schemas.datacontract.org/2004/07/FileShareingSystem")]
    [System.SerializableAttribute()]
    public partial class requestFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UplodeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComonId {
            get {
                return this.ComonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ComonIdField, value) != true)) {
                    this.ComonIdField = value;
                    this.RaisePropertyChanged("ComonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UplodeDate {
            get {
                return this.UplodeDateField;
            }
            set {
                if ((this.UplodeDateField.Equals(value) != true)) {
                    this.UplodeDateField = value;
                    this.RaisePropertyChanged("UplodeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="listOfAllFile", Namespace="http://schemas.datacontract.org/2004/07/FileShareingSystem.Class")]
    [System.SerializableAttribute()]
    public partial class listOfAllFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UplodeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComonId {
            get {
                return this.ComonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ComonIdField, value) != true)) {
                    this.ComonIdField = value;
                    this.RaisePropertyChanged("ComonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UplodeDate {
            get {
                return this.UplodeDateField;
            }
            set {
                if ((this.UplodeDateField.Equals(value) != true)) {
                    this.UplodeDateField = value;
                    this.RaisePropertyChanged("UplodeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="userDetail", Namespace="http://schemas.datacontract.org/2004/07/FileShareingSystem.Class")]
    [System.SerializableAttribute()]
    public partial class userDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileUploadeService.IFileUploade")]
    public interface IFileUploade {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/DoWork", ReplyAction="http://tempuri.org/IFileUploade/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/DoWork", ReplyAction="http://tempuri.org/IFileUploade/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/SaveFile", ReplyAction="http://tempuri.org/IFileUploade/SaveFileResponse")]
        void SaveFile(FileShareingSystemHost.FileUploadeService.requestFile r_file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/SaveFile", ReplyAction="http://tempuri.org/IFileUploade/SaveFileResponse")]
        System.Threading.Tasks.Task SaveFileAsync(FileShareingSystemHost.FileUploadeService.requestFile r_file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/GetFile", ReplyAction="http://tempuri.org/IFileUploade/GetFileResponse")]
        FileShareingSystemHost.FileUploadeService.listOfAllFile[] GetFile(string fileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/GetFile", ReplyAction="http://tempuri.org/IFileUploade/GetFileResponse")]
        System.Threading.Tasks.Task<FileShareingSystemHost.FileUploadeService.listOfAllFile[]> GetFileAsync(string fileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/Register", ReplyAction="http://tempuri.org/IFileUploade/RegisterResponse")]
        void Register(FileShareingSystemHost.FileUploadeService.userDetail r_user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/Register", ReplyAction="http://tempuri.org/IFileUploade/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(FileShareingSystemHost.FileUploadeService.userDetail r_user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/Login", ReplyAction="http://tempuri.org/IFileUploade/LoginResponse")]
        int Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploade/Login", ReplyAction="http://tempuri.org/IFileUploade/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileUploadeChannel : FileShareingSystemHost.FileUploadeService.IFileUploade, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileUploadeClient : System.ServiceModel.ClientBase<FileShareingSystemHost.FileUploadeService.IFileUploade>, FileShareingSystemHost.FileUploadeService.IFileUploade {
        
        public FileUploadeClient() {
        }
        
        public FileUploadeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileUploadeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public void SaveFile(FileShareingSystemHost.FileUploadeService.requestFile r_file) {
            base.Channel.SaveFile(r_file);
        }
        
        public System.Threading.Tasks.Task SaveFileAsync(FileShareingSystemHost.FileUploadeService.requestFile r_file) {
            return base.Channel.SaveFileAsync(r_file);
        }
        
        public FileShareingSystemHost.FileUploadeService.listOfAllFile[] GetFile(string fileid) {
            return base.Channel.GetFile(fileid);
        }
        
        public System.Threading.Tasks.Task<FileShareingSystemHost.FileUploadeService.listOfAllFile[]> GetFileAsync(string fileid) {
            return base.Channel.GetFileAsync(fileid);
        }
        
        public void Register(FileShareingSystemHost.FileUploadeService.userDetail r_user) {
            base.Channel.Register(r_user);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(FileShareingSystemHost.FileUploadeService.userDetail r_user) {
            return base.Channel.RegisterAsync(r_user);
        }
        
        public int Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
    }
}
